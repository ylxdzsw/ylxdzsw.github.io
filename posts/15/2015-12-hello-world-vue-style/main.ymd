[mixin] @std/vue

[title]: Hello World

[h2] Hello, World!

[quote] Too Young Too Simple

  Julia function arguments follow a convention sometimes called “pass-by-sharing”, which means that values are not copied
when they are passed to functions. Function arguments themselves act as new variable bindings (new locations that can
refer to values), but the values they refer to are identical to the passed values. Modifications to mutable values (such
as Arrays) made within a function will be visible to the caller. This is the same behavior found in Scheme, most Lisps,
Python, Ruby and Perl, among other dynamic languages.

[code].julia>>>
f(x,y) = x + y

function g(x,y)
    return x * y
    x + y
end

julia> f(2,3)
5

julia> g(2,3)
6
<<<
[h3] This is an h3

  Julia function arguments follow a convention sometimes called “pass-by-sharing”, which means that values are not copied
when they are passed to functions. Function arguments themselves act as new variable bindings (new locations that can
refer to values), but the values they refer to are identical to the passed values. Modifications to mutable values (such
as Arrays) made within a function will be visible to the caller. This is the same behavior found in Scheme, most Lisps,
Python, Ruby and Perl, among other dynamic languages.

[h2] Another Section

[quote].warn>>
  Be careful
Those things are bad

  this is another paragraph
<<

