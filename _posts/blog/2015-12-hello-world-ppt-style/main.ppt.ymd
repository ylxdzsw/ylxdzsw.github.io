[title]: Fuck

[section] Hellow World!

[section] Lorem Ipsum

[quote] Too Young Too Simple

  Julia function arguments follow a convention sometimes called “pass-by-sharing”,
which means that values are not copied when they are passed to functions. Function arguments themselves act as new
variable bindings (new locations that can refer to values), but the values they refer to are identical to the passed
values. Modifications to mutable values (such as Arrays) made within a function will be visible to the caller. This is
the same behavior found in Scheme, most Lisps, Python, Ruby and Perl, among other dynamic languages.

[section] code

[code].julia>>>
f(x,y) = x + y

function g(x,y)
    return x * y
    x + y
end

julia> f(2,3)
5

julia> g(2,3)
6
<<<

[section] Yet another page

  Julia `function` arguments follow a convention sometimes called “pass-by-sharing”, which means that values are not
copied when they are passed to functions. Function arguments themselves act as new variable bindings (new locations that
can refer to values), but the values they `refer` to are identical to the passed values. Modifications to mutable values
(such as Arrays) made within a function will be visible to the caller. This is the same behavior found in Scheme, most
Lisps, Python, Ruby and Perl, among other dynamic languages.

[section] Effects (click to reveal)

[-].fade.click manjaro rolling because life's never still
[-].fade.delay manjaro rolling because life's never still
[-].fade.delay manjaro rolling because life's never still
[-].fade.delay manjaro rolling because life's never still
