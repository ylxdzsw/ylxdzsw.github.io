[mixin] @std/vue

[title]: Matebook Arch Tweak Note

[h2] Matebook Arch Tweak Note

  This is a collection of notes of setting up and tweaking Arch Linux on Huawei Notebook 13. There are quite some
existing write-ups about installing Arch on Matebook, among which I found [this one] most complete and useful.

[this one]: [link](https://github.com/nekr0z/linux-on-huawei-matebook-13-2019) this one

[h3] Installation

  Before actually installing Arch, the first thing is to launch the stock Windows and check if everything works. It will
be harder to get warrant later. Plus, Huawei provides BIOS updates as Windows executables. Though it is possible to
install it on Linux, it is much simpler and more reliable to install it on Windows. Just grab and run [the exe].

[the exe]: [link](https://consumer.huawei.com/en/support/laptops/matebook-13/) the exe

[h3] Matebook Specifics

[h4] BIOS

  As stated earlier, Huawei provides BIOS updates as Windows executables. There are some [tutorial and scripts] about
installing it on Linux, but they look complex and I would rather use the old one.

[tutorial and scripts]: [link](https://github.com/nekr0z/linux-on-huawei-matebook-13-2019#bios-updates) tutorial and scripts

[h4] Driver for battery and the Fn key

There is [huawei-wmi] that provides the battery protection function and the Fn key setting. The driver requires Linux
kernel â©¾ 5.0, and is included in Linux â©¾ 5.5. So there is no need to install separatly.

[huawei-wmi]: [link](https://github.com/aymanbagabas/Huawei-WMI) huawei-wmi

However, there is a small problem with the battery protection. The setting will get reset randomly every a few days.
The only solution is to repeatedly set it. To do this automatially, create [code](/etc/systemd/system/huawei.service)
and [enable].

[enable]: [code](systemctl enable huawei)

[code]>>>
[Unit]
Description=Huawei Battery Protection
After=suspend.target hibernate.target hybrid-sleep.target

[Service]
Type=oneshot
ExecStart=/usr/bin/sh -c 'echo "70 80" > /sys/devices/platform/huawei-wmi/charge_control_thresholds'

[Install]
WantedBy=suspend.target hibernate.target hybrid-sleep.target multi-user.target
<<<

[h3] Gnome and Wayland

[h3] Font

[h3] Clean and Backup

[h3] Desktop Applications

[h4] Video Player

  The Gnome project provides [totem] (also simply called Videos). It is quite simple and looks nice. However, it depends
on the disastrous [code](gst-plugins-bad), which has a huge indirect dependencies, including [python2]. (Update:
[python2] is [finally removed], hoorayðŸŽ‰)

[python2]: [code](python2)
[totem]: [link](https://wiki.gnome.org/Apps/Videos) totem
[finally removed]: [link](https://git.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/libkate&id=14a17e02e9625bb1446968d5ff13656c91495e59) finally removed

  Since I use [code](ffmpeg), which comes with an extremely simple player called [code](ffplay), I decided to use that
as my default player. Beyond it, [code](chromium) is also an option, but I find [code](ffplay) more handy when the file
name does not contains common video extname. ([code](chromium) will try to download it unless the file is called "xxx.mp4").

  To let [code](Gnome) and [code](xdg-open) recognize ffplay, add the following desktop description to [path].

[path]: [code](~/.local/share/applications/ffplay.desktop)

[code]>>>
#!/usr/bin/env xdg-open
[Desktop Entry]
Version=1.0
Terminal=false
Type=Application
Name=FFPlay
Exec=ffplay %U
NoDisplay=true
Categories=AudioVideo;Audio;Video;Player;
MimeType=application/mxf;application/ogg;application/ram;application/sdp;application/smil;application/smil+xml;application/vnd.apple.mpegurl;application/vnd.ms-asf;application/vnd.ms-wpl;application/vnd.rn-realmedia;application/vnd.rn-realmedia-vbr;application/x-extension-m4a;application/x-extension-mp4;application/x-flac;application/x-flash-video;application/x-matroska;application/x-netshow-channel;application/x-ogg;application/x-quicktime-media-link;application/x-quicktimeplayer;application/x-shorten;application/x-smil;application/xspf+xml;audio/3gpp;audio/3gpp2;audio/aac;audio/ac3;audio/AMR;audio/AMR-WB;audio/basic;audio/dv;audio/eac3;audio/flac;audio/m4a;audio/midi;audio/mp1;audio/mp2;audio/mp3;audio/mp4;audio/mpeg;audio/mpegurl;audio/mpg;audio/ogg;audio/opus;audio/prs.sid;audio/scpls;audio/vnd.rn-realaudio;audio/wav;audio/webm;audio/x-aac;audio/x-aiff;audio/x-ape;audio/x-flac;audio/x-gsm;audio/x-it;audio/x-m4a;audio/x-m4b;audio/x-matroska;audio/x-mod;audio/x-mp1;audio/x-mp2;audio/x-mp3;audio/x-mpg;audio/x-mpeg;audio/x-mpegurl;audio/x-ms-asf;audio/x-ms-asx;audio/x-ms-wax;audio/x-ms-wma;audio/x-musepack;audio/x-opus+ogg;audio/x-pn-aiff;audio/x-pn-au;audio/x-pn-realaudio;audio/x-pn-realaudio-plugin;audio/x-pn-wav;audio/x-pn-windows-acm;audio/x-realaudio;audio/x-real-audio;audio/x-s3m;audio/x-sbc;audio/x-scpls;audio/x-shorten;audio/x-speex;audio/x-stm;audio/x-tta;audio/x-wav;audio/x-wavpack;audio/x-vorbis;audio/x-vorbis+ogg;audio/x-xm;image/vnd.rn-realpix;image/x-pict;misc/ultravox;text/google-video-pointer;text/x-google-video-pointer;video/3gp;video/3gpp;video/3gpp2;video/dv;video/divx;video/fli;video/flv;video/mp2t;video/mp4;video/mp4v-es;video/mpeg;video/mpeg-system;video/msvideo;video/ogg;video/quicktime;video/vivo;video/vnd.divx;video/vnd.mpegurl;video/vnd.rn-realvideo;video/vnd.vivo;video/webm;video/x-anim;video/x-avi;video/x-flc;video/x-fli;video/x-flic;video/x-flv;video/x-m4v;video/x-matroska;video/x-mjpeg;video/x-mpeg;video/x-mpeg2;video/x-ms-asf;video/x-ms-asf-plugin;video/x-ms-asx;video/x-msvideo;video/x-ms-wm;video/x-ms-wmv;video/x-ms-wmx;video/x-ms-wvx;video/x-nsv;video/x-ogm+ogg;video/x-theora;video/x-theora+ogg;x-content/video-dvd;x-scheme-handler/pnm;x-scheme-handler/mms;x-scheme-handler/net;x-scheme-handler/rtp;x-scheme-handler/rtmp;x-scheme-handler/rtsp;x-scheme-handler/mmsh;x-scheme-handler/uvox;x-scheme-handler/icy;x-scheme-handler/icyx;
<<<

  A caveat is that manually calling [code](update-desktop-database ~/.local/share/applications) is required, which is
usually done by pacman hooks.

  [code](ffplay) doesn't even have a single button on its UI. All controls are hidden in [the manual]. The most
frequently used commands for me are:

[-] right mouse click to seek to percentage in file corresponding to fraction of width;
[-] left/right arrow to backward/forward 10 seconds, and down/up arrows for 1 minute;
[-] <kbd>p</kbd> to pause, and <kbd>q</kbd> to close;
[-] and double click to (un)fullscreen.

[the manual]: [code](man ffplay)

[h4] Proxy

v2socks, gnome extension, proxychains, frpc, ssh -D
